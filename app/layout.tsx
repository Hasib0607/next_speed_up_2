import type { Metadata } from 'next';
import localFont from 'next/font/local';
import './globals.css';
// import NextTopLoader from "nextjs-toploader";
import Announcement from '@/components/Announcement';
import getDesign from '@/utils/fetcher/getDesign';
import { headers } from 'next/headers';
import { GetServerSideProps } from 'next';
import AppWrapper from './AppWrapper';
import getStore from '@/utils/fetcher/getStore';

const geistSans = localFont({
    src: './fonts/GeistVF.woff',
    variable: '--font-geist-sans',
    weight: '100 900',
});
const geistMono = localFont({
    src: './fonts/GeistMonoVF.woff',
    variable: '--font-geist-mono',
    weight: '100 900',
});

export const metadata: Metadata = {
    title: 'Create Next App',
    description: 'Generated by create next app',
};

export default async function RootLayout({
    children,
    currentUrl,
}: Readonly<{
    children: React.ReactNode;
    currentUrl: any;
}>) {
    const appStore = await getStore();
    // const headersList = await headers();
    const design = await getDesign();

    // Check if the current route is the homepage
    // const pathname = headersList.get('x-nextjs-route');
    // const isHomepage = pathname;

    return (
        <html lang="en">
            <body
                className={`${geistSans.variable} ${geistMono.variable} antialiased`}
            >
                {/* <NextTopLoader /> */}
                {/* <Announcement design={design} /> */}
                <AppWrapper design={design} appStore={appStore}>
                    {children}
                </AppWrapper>
            </body>
        </html>
    );
}

// export const getServerSideProps: GetServerSideProps = async ({ req }) => {
//     const currentUrl = req.url; // Get the full URL

//     return {
//         props: {
//             currentUrl,
//         },
//     };
// };
